"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[769],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},p=Object.keys(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var r=a.createContext({}),l=function(e){var n=a.useContext(r),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(r.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,p=e.originalType,r=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(t),m=i,g=c["".concat(r,".").concat(m)]||c[m]||d[m]||p;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var p=t.length,o=new Array(p);o[0]=m;var s={};for(var r in n)hasOwnProperty.call(n,r)&&(s[r]=n[r]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<p;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9613:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>p,metadata:()=>s,toc:()=>l});var a=t(7462),i=(t(7294),t(3905));const p={id:"laminas-webpack-guide-setting-webpack",title:"Setting up the Webpack bundler",sidebar_label:"Setting up the Webpack bundler"},o=void 0,s={unversionedId:"guides/laminas-webpack-guide-setting-webpack",id:"guides/laminas-webpack-guide-setting-webpack",title:"Setting up the Webpack bundler",description:"This is not a guide on Webpack bundling. I recommend this excellent answer",source:"@site/docs/guides/3-setting-webpack.md",sourceDirName:"guides",slug:"/guides/laminas-webpack-guide-setting-webpack",permalink:"/laminas-webpack/docs/guides/laminas-webpack-guide-setting-webpack",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"laminas-webpack-guide-setting-webpack",title:"Setting up the Webpack bundler",sidebar_label:"Setting up the Webpack bundler"},sidebar:"tutorialSidebar",previous:{title:"Setting up Laminas MVC to use Webpack",permalink:"/laminas-webpack/docs/guides/laminas-webpack-guide-setting-up"},next:{title:"Setting up Laminas MVC to use the manifest",permalink:"/laminas-webpack/docs/guides/laminas-webpack-guide-setting-laminas"}},r={},l=[{value:"Webpack configuration",id:"webpack-configuration",level:2},{value:"Generating a manifest of your bundles",id:"generating-a-manifest-of-your-bundles",level:2}],u={toc:l},c="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This is not a guide on Webpack bundling. I recommend this excellent ",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/43436754/using-webpack-with-an-existing-php-and-js-project"},"answer"),"\non Stackoverflow by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Loilo"},"Loilo")," to get you started on using Webpack\nand, obviously, reading the Webpack ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/concepts/"},"documentation")," helps a lot.   ")),(0,i.kt)("h2",{id:"webpack-configuration"},"Webpack configuration"),(0,i.kt)("p",null,"As ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Loilo"},"Loilo")," suggests, I keep my Webpack config files in the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," folder like this: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},".\n+--browser\n|  +--build\n|  |  config.base.js\n|  |  config.developement.js\n|  |  config.production.js\n|  |  paths.js\n|  +--src\n|    +--lib\n|    |  common-code.js\n|    +--mymodule\n|       +--mycontroller\n|          index.js\n|          details.js\n|          edit.js\n+--...\n")),(0,i.kt)("p",null," I configure Webpack to output the bundles to the ",(0,i.kt)("inlineCode",{parentName:"p"},"public/dist")," folder and to use\n",(0,i.kt)("inlineCode",{parentName:"p"},"/dist/")," as the ",(0,i.kt)("inlineCode",{parentName:"p"},"publicPath"),".  I also configure Webpack to also output any assets and css in ",(0,i.kt)("inlineCode",{parentName:"p"},"public/dist"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"paths.js")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const path = require('path');\n\nmodule.exports = {\n    SRC: path.resolve(__dirname, '..', 'src'),\n    DIST: path.resolve(__dirname, '..','..','public','dist'),\n    ASSETS: '/dist/',\n};\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"config.development.js")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const merge = require('webpack-merge');\n\nmodule.exports = merge(require('./config.base'), {\n    mode: 'development',\n    watch: true,\n    devtool: 'inline-source-map',\n});\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"config.base.js")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const path = require('path');\nconst {SRC, DIST, ASSETS} = require('./paths');\nconst webpack = require('webpack');\n\n// If you need JQuery, this is how to do it\nnew webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\",\n});\n\nmodule.exports = {\n    entry: {\n        main: path.resolve(SRC, 'index.js'),\n        'application.index': path.resolve(SRC, 'application/index.js')\n    },\n    output: {\n        path: DIST,\n        filename: '[name].js',\n        publicPath: ASSETS\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.css$/,\n                use: [\n                    {loader: 'style-loader', options: { injectType: 'linkTag'}},\n                    {loader: 'file-loader', options: {\n                        name: '[name].[ext]',\n                            outputPath: 'css'\n                    }},\n                ]\n            },\n            {\n                test: /\\.(gif|png|jpg|jpeg)$/,\n                loaders:[\n                    {loader: 'file-loader', options: {name: '[name].[ext]', outputPath: 'css'}}\n                ]\n            }\n        ]\n    },\n    optimization: {\n        splitChunks: {\n            chunks: 'all',\n            maxInitialRequests: Infinity,\n            minSize: 0,\n            cacheGroups: {\n                vendor: {\n                    test: /[\\\\/]node_modules[\\\\/]/,\n                    name(module) {\n                        // Get the name. e.g. node_modules/packageName/not/this/part.js\n                        // or node_modules/packageName\n                        const packageName = module.context.match(/[\\\\/]node_modules[\\\\/](.*?)([\\\\/]|$)/)[1];\n                        return `npm.${packageName.replace('@','')}`;\n                    }\n                }\n            }\n        }\n    },\n\n    plugins: [\n    ]\n};\n")),(0,i.kt)("p",null,"This seems like a lot to digest but if you are familiar with Webpack, it should make sense."),(0,i.kt)("p",null,"This will generate the following files in the ",(0,i.kt)("inlineCode",{parentName:"p"},"public/dist")," folder:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"...\n+--public\n|  +--dist\n|    +--assets\n|    |  <your asset files>\n|    +--css\n|    |  <your css files>\n|    index.js\n|    application.index.js\n|    npm.bootstrap.js\n|    npm.jquery.js\n|    npm.popper.js.js\n+--...\n")),(0,i.kt)("p",null," But you still have the complexity of figuring out which scripts goes with which view\ntemplate. Fortunately, you can add plugins to webpack to generate a manifest linking entry points to bundles."),(0,i.kt)("h2",{id:"generating-a-manifest-of-your-bundles"},"Generating a manifest of your bundles"),(0,i.kt)("p",null,"I have written a Webpack plugin that generates a simple manifest in a PHP associative array."),(0,i.kt)("p",null,"The plugin is called ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/visto9259/php-webpack-plugin"},"@visto9259/php-webpack-plugin"),"."),(0,i.kt)("p",null,"By adding the plugin to the ",(0,i.kt)("inlineCode",{parentName:"p"},"config.base.js")," file like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const path = require('path');\nconst {SRC, DIST, ASSETS} = require('./paths');\nconst webpack = require('webpack');\n\nconst PhpWebpackPlugin = require('@visto9259/php-webpack-plugin');\n\n// If you need JQuery, this is how to do it\nnew webpack.ProvidePlugin({\n    $: \"jquery\",\n    jQuery: \"jquery\",\n});\n\nmodule.exports = {\n    entry: {\n        main: path.resolve(SRC, 'index.js'),\n        'application.index': path.resolve(SRC, 'application/index.js')\n    },\n    output: {\n        path: DIST,\n        filename: '[name].js',\n        publicPath: ASSETS\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.css$/,\n                use: [\n                    {loader: 'style-loader', options: { injectType: 'linkTag'}},\n                    {loader: 'file-loader', options: {\n                        name: '[name].[ext]',\n                            outputPath: 'css'\n                    }},\n                ]\n            },\n            {\n                test: /\\.(gif|png|jpg|jpeg)$/,\n                loaders:[\n                    {loader: 'file-loader', options: {name: '[name].[ext]', outputPath: 'css'}}\n                ]\n            }\n        ]\n    },\n    optimization: {\n        splitChunks: {\n            chunks: 'all',\n            maxInitialRequests: Infinity,\n            minSize: 0,\n            cacheGroups: {\n                vendor: {\n                    test: /[\\\\/]node_modules[\\\\/]/,\n                    name(module) {\n                        // Get the name. e.g. node_modules/packageName/not/this/part.js\n                        // or node_modules/packageName\n                        const packageName = module.context.match(/[\\\\/]node_modules[\\\\/](.*?)([\\\\/]|$)/)[1];\n                        return `npm.${packageName.replace('@','')}`;\n                    }\n                }\n            }\n        }\n    },\n\n    plugins: [\n        new PhpWebpackPlugin(),\n    ]\n};\n")),(0,i.kt)("p",null,"Webpack will generate a ",(0,i.kt)("inlineCode",{parentName:"p"},"scriptlist.php")," file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"public/dist")," folder."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nreturn [\n    'main' => [\n        'npm.bootstrap' =>  '/dist/npm.bootstrap.js',\n        'npm.jquery' =>  '/dist/npm.jquery.js',\n        'npm.popper.js' =>  '/dist/npm.popper.js.js',\n        'npm.style-loader' =>  '/dist/npm.style-loader.js',\n        'npm.webpack' =>  '/dist/npm.webpack.js',\n        'main' =>  '/dist/main.js',\n    ],\n    'application.index' => [\n        'npm.bootstrap' =>  '/dist/npm.bootstrap.js',\n        'npm.jquery' =>  '/dist/npm.jquery.js',\n        'npm.popper.js' =>  '/dist/npm.popper.js.js',\n        'npm.style-loader' =>  '/dist/npm.style-loader.js',\n        'npm.webpack' =>  '/dist/npm.webpack.js',\n        'application.index' =>  '/dist/application.index.js',\n    ],\n];\n")),(0,i.kt)("p",null," This file can then be consumed in the Laminas application to match the list of scripts in the bundle of each entry point."),(0,i.kt)("p",null,"The next step is to set up your Laminas application to consume the manifest."))}d.isMDXComponent=!0}}]);